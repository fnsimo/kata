package com.trial.product.security;

import java.security.Key;
import java.util.Date;

import org.springframework.stereotype.Service;

import io.jsonwebtoken.Claims;
import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.SignatureAlgorithm;
import io.jsonwebtoken.security.Keys;

@Service
public class JwtService {

	// Clé secrète pour signer les tokens JWT
	private final Key SECRET_KEY = Keys.secretKeyFor(SignatureAlgorithm.HS256);

	// Méthode pour générer un JWT
	public String generateToken(String username) {
		return Jwts.builder().setSubject(username).setIssuedAt(new Date())
				.setExpiration(new Date(System.currentTimeMillis() + 86400000)) // expiration dans 24h
				.signWith(SECRET_KEY).compact();
	}

	// Méthode pour extraire les Claims (informations) du JWT
	public Claims parseClaimsJwt(String token) {
		return Jwts.parser().setSigningKey(SECRET_KEY).build().parseClaimsJws(token).getBody();
	}

	// Méthode pour vérifier si le token est expiré
	public boolean isTokenExpired(String token) {
		final Date expiration = parseClaimsJwt(token).getExpiration();
		return expiration.before(new Date());
	}
}
