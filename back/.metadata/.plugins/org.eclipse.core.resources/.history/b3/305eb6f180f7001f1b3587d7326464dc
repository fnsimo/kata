package com.trial.product.security;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
@EnableWebSecurity
public class SecurityConfig {

    @Bean
    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
        http.csrf(csrf -> csrf.disable())
            .authorizeHttpRequests(auth -> auth
            		.requestMatchers("/auth/**").permitAll()
            		.requestMatchers("/h2-console/**").permitAll()
    				.anyRequest().authenticated()
		
    				//.and()
    	            .headers()
    	                .frameOptions().sameOrigin() 
    	                
//    					.and().sessionManagement()
//    					.sessionCreationPolicy(SessionCreationPolicy.STATELESS).and()
    					.authenticationProvider(authenticationProvider)
    					.addFilterBefore(jwtAuthenticationFilter, UsernamePasswordAuthenticationFilter.class);
        
//		http.csrf().disable().
//		authorizeHttpRequests()
//		.requestMatchers("/auth/**").permitAll()
//				.requestMatchers("/h2-console/**").permitAll()
//
//				.anyRequest().authenticated()
//				
//				.and()
//	            .headers()
//	                .frameOptions().sameOrigin() 
//				
//				.and().sessionManagement()
//				.sessionCreationPolicy(SessionCreationPolicy.STATELESS).and()
//				.authenticationProvider(authenticationProvider)
//				.addFilterBefore(jwtAuthenticationFilter, UsernamePasswordAuthenticationFilter.class);


        return http.build();
    }

    @Bean
    public AuthenticationManager authenticationManager(
            AuthenticationConfiguration authenticationConfiguration) throws Exception {
        return authenticationConfiguration.getAuthenticationManager();
    }
}
